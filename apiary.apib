FORMAT: 1A

# Core MM API

Core MM is an API allowing consumers to access employee app features.



## Persons [/persons]

### Persons [/persons/{person_id}]

+ id (integer) - Id of the person
+ name (string) - Name of the person
+ surname (string) - Surname of the person

+ Model (application/hal+json;charset=UTF-8)

+ Parameters
    + person_id (required, number, `563`) ... ID of the person in the form of an integer
+ Attributes (object)
    + id: 563 (number, required)
    + name: Tom (string, required)
    + surname: Coleman (string, required)
    + title: Analyst (string, nullable)

### GET Person [GET]

A single Person is returned through a GET request where the person id is sent as an URL parameter.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Persons)
        + _links
            + self (required)
                + href: http://local-133.umantis.lan/rest/persons/563 (string, required)
            + employee (required)
                + href: http://local-133.umantis.lan/rest/employees/563 (string, required)


### GET Person Invitations [GET /persons/{person_id}/invitations]

Returns all peer invitations that this person has.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Page)
        + _embedded
            + invitations (array[InvitationType])
        + _links (PaginationLinks)


## Employees [/employees]

### Employee [/employees/{employee_id}]

+ id (integer) - Id of the employee
+ name (string) - Name of the employee
+ surname (string) - Surname of the employee
+ title (string) - Title of the employee
+ civil_status
    + list (string) - ReferenceKey List id
    + value (string) - ReferenceKey id

+ Model (application/hal+json)

+ Parameters
    + employee_id (required, number, `563`) ... ID of the employee in the form of an integer
+ Attributes (object)
    + id: 563 (number, required)
    + name: John (string, required)
    + surname: Doe (string, required)
    + civil_status
        + list: 21 (string, required)
        + value: 21001 (string, required)
    + _links (required)
        + self (required)
            + href: http://local-133.umantis.lan/rest/employees/563 (string, required)
    + _embedded (required)
        + positions (array[Position], required)


### GET Employee [GET]

A single Employee is returned through a GET request where the employee id is sent as an URL parameter.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Employee)


### Employee Public Information [/employees/{employee_id}/public_info]

Public data set information related to an employee

+ Model (application/hal+json)

+ Parameters
    + employee_id (required, number, `284`) ... ID of the employee in the form of an integer
+ Attributes (object)
    + position_id: 27 (number, required)
    + position_name: COO (string, required)
    + person_id: 284 (number, required)
    + first_name: Walter (string, required)
    + last_name: Turner (string, required)
    + email: walter.turner@fanergy.net (string, required)


### GET Employee Public Information [GET]

Get the public data set information related to an employee.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Page)
        + _embedded (required)
            + public_info (array[Employee Public Information], required)
        + _links (PaginationLinks, required)


## Positions [/positions]

Every employee has at least a position.
A position identifies an occupancy into the company.


### Position [/positions/{position_id}]

Gets a position given it's id.

+ id (number) - Id of the position
+ name (string) - Name of the position
+ description (string) - Description of the position

+ Model (application/hal+json)

+ Parameters
    + position_id (required, number, `132`) ... ID of the position in the form of an integer
+ Attributes (object)
    + id: 1 (number, required)
    + name: Java developer (string, required)
    + description: Developer of the Core MM API (string, required)
    + _links (required)
        + self (required)
            + href: http://local-133.umantis.lan/rest/positions/132 (string, required)
        + employee (required)
            + href: http://local-133.umantis.lan/rest/employees/994 (string, required)


### GET Position [GET]

A single Position is returned through a GET request where the position id is sent as an URL parameter.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Position)



### GET Position Direct Reports [GET /positions/{position_id}/direct_reports]

Returns list of position who direct reports given position id.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Page)
        + _embedded
            + direct_reports (array[Position])
        + _links (PaginationLinks)


### Position Public Information [/positions/{position_id}/public_info]

+ Model (application/hal+json)

+ Parameters
    + position_id (required, number, `27`) ... ID of the position in the form of an integer
+ Attributes (object)
    + position_id: 27 (number, required)
    + position_name: COO (string, required)
    + person_id: 284 (number, required)
    + first_name: Walter (string, required)
    + last_name: Turner (string, required)
    + email: walter.turner@fanergy.net (string, required)
    + _links
        + photograph
            + href: `/blobstore/blob/2014-2-12-1392213948_2164_499?private=true&mac=PXsRP73RrgnknqRpC9JxmZGc4S4dvNQzln5PkBJktnk` (string, required)


### GET Position Public Information [GET]

A single Position Public Information is returned through a GET request where the position id is sent as an URL path variable.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Position Public Information)


## Goal [/positions/{position_id}/periods/{period_id}/goals]

There are 7 different types of goals, when a goal type "Objective" is returned, additional links for parent goal and company goal will be returned.

+ period (integer) - Id of the period
+ type (integer) - Id of type of goal
+ title (string) - Title of the goal
+ description (string) - Description of the goal
+ modifier (string) - Marceau, Sophie
+ goal_id (string) - Id of the goal
+ legacy_id (string) - Legacy id of the goal
+ period (string) - Period id when the goal belongs
+ type (string) - Type of the goal
+ creator (string) - Position id of the Goal creator
+ recipient (integer) - Position id of he Goal recipient
+ category (string) - Category of the created Goal
+ weight (number) - Weight of the goal

+ Model (application/hal+json)

+ Parameters
    + position_id (required, number, `132`) ... ID of position who owns the goal in the form of an integer
    + period_id (required, number, `103`) ... ID of the period when the goal is included in the form of an integer

+ Attributes (object)
    + title: Title for demo (string, required)
    + description: It seems that we can create goals. (string, nullable)
    + modifier: Marceau, Sophie (string, nullable)
    + goal_id: 1147-21000000000352-1750 (string, required)
    + legacy_id: 1147 (number, required)
    + period: 103 (number, required)
    + type: Task (string, required)
    + creator: Marceau, Sophie (string, nullable)
    + recipient: 132 (number, required)
    + creation_date: 1360655538000 (number, nullable)
    + due_date: 1360655538000 (number, nullable)
    + modification_date: 1360655538000 (number, nullable)
    + category: TASK (string, nullable)
    + category_new (CategoryType, nullable)
    + _links
        + self
            + href: `http://local-133.umantis.lan/rest/positions/132/periods/103/goals/1147-21000000000352-1750` (string, required)
        + delete
            + href: `http://local-133.umantis.lan/rest/positions/132/periods/103/goals/1147-21000000000352-1750` (string, required)
        + update
            + href: `http://local-133.umantis.lan/rest/positions/132/periods/103/goals/1147-21000000000352-1750` (string, optional)


### Get a goal [GET /positions/{position_id}/periods/{period_id}/goals/{goal_id}]

A single Goal is returned through a GET request where the goal id is sent as an URL parameter.

+ Parameters
    + goal_id (required, string, `2825-21000000001525-1750`) ... ID of the goal in the form of a string

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Goal)


### Create a new goal [POST]

A new goal will be created using this action.
This action takes a JSON payload as a part of the request.
Response then return specific header and body

+ type (STRING) - Type of type of goal
+ title (string) - Title of the goal
+ description (string) - Description of the goal
+ creator (string) - Position id of the Goal creator
+ category (string) - Category of the created Goal

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

    + Body
    + Attributes (object)
        + title: Modified title (string, optional)
        + description: Modified description (string, optional)
        + type: TASK (string, optional)
        + category: 210486 (string, optional)


+ Response 201 (application/hal+json;charset=UTF-8)
    + Attributes (Goal)



### Modify a goal [PUT /positions/{position_id}/periods/{period_id}/goals/{goal_id}]

A  goal will be modified using this action.
This action takes a JSON payload as a part of the request.
Response then return specific header and body

+ Parameters
    + goal_id (required, string, `2825-21000000001525-1750`) ... ID of the goal in the form of a string

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

    + Body
    + Attributes (object)
        + title: Modified title (string, optional)
        + description: Modified description (string, optional)
        + type: TASK (string, optional)
        + category: 210486 (string, optional)

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (Goal)



### Delete a goal [DELETE /positions/{position_id}/periods/{period_id}/goals/{goal_id}]

This DELETE request will delete the goal with the existing request parameter id.

+ Parameters
    + goal_id (required, string, `2825-21000000001525-1750`) ... ID of the goal in the form of a string

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 204


### Get all goals from current period [GET /positions/{position_id}/goals]

All Goals from given position are returned through a GET request where the position id is sent as an URL parameter.
Only goals for period set as CURRENT will be returned.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (object)
        + _embedded
            + goals (array[Goal])
        + page (Page)


### Get all goals from a period [GET /positions/{position_id}/periods/{period_id}/goals]

All Goals from given position and period are returned through a GET request where the position id and period id are sent as an URL parameter.

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)

    + Headers
    + Body
    + Attributes (object)
        + _embedded
            + goals (array[Goal])
        + page (Page)
        + _links (PaginationLinks)
            + next_period_goals
                + href: `http://mmbeta-133.umantis.lan/rest/positions/132/periods/104/goals` (string, required)




### Invite Peer to Goal [POST /positions/{position_id}/periods/{period_id}/goals/{goal_id}/invitations]

Invite a peer colleague to create a goal evaluation into the selected goal  .

+ Parameters
    + goal_id (required, string, `2825-21000000001525-1750`) ... ID of the goal in the form of a string

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-FORWARDED-HOST: local-133.umantis.lan
    + Body
    + Attributes (object)
        + person_id: 563 (number, optional)
        + email: aria.stark@starks.umantis (string, optional)


+ Response 202


## Goal Type [/static_data/goals/types]

Every goal has a related goal type.
Every goal type has a scale of appraisal values.
Every goal type has a scale of possible categories values.

+ type_id (number) - Id of type of goal
    + objective
    + task
    + skill
    + development
    + behavior
    + feedback
    + potential
+ name: Name of the goal type (string, required)
+ appraisals (array[AppraisalValueType]): List of possibles values
+ categories (array): List of categories

+ Model (application/hal+json)

+ Attributes (object)
    + name: objective (string, required)
    + _embedded
        + appraisals (array[AppraisalValueType])
        + categories (array)
            + (object)
                + value: 21005 (string, required)
    + _links
        + self
            + href: `http://local-133.umantis.lan/rest/goals/types/objective` (string, required)



### Get Goal Type [GET /static_data/goals/types/{type_id}]

Gets Goal Type with given url parameter id.

+ Parameters
    + type_id: objective (required, string) ... ID of the goal type in the form of a string

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)
    + Body
    + Attributes (Goal Type)




### List Goal Types [GET]

List a list of goal types appliable to a goal.
If position or/and period parameters are sent, returned goal type are only appliable for that period and position.


+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

+ Response 200 (application/hal+json;charset=UTF-8)
    + Body
    + Attributes (object)
        + _embedded
            + types (array[Goal Type])
        + page (Page)
    + Attributes
        + _links
            + self
                + href: `http://local-133.umantis.lan/rest/goals/types` (string, required)




## Goal Evaluation [/positions/{position_id}/goals/{goal_id}/evaluations]

+ evaluator: Evaluator of the evaluation (string)
+ appraisal: Value of the evaluation (string)
+ comment: This is the comment for a goal evaluation (string)

As link:
+ goal: Goal where the evaluation is being created (string, required)


+ Model (application/hal+json)

+ Parameters
    + position_id (required, number, `132`) ... ID of the position who owns the goal that receives the evaluation
    + goal_id (required, string, `2825-21000000001525-1750`) ... ID of the goal in the form of string

+ Attributes (object)
    + goal_evaluation_id: `MAIN-2-2825-21000000001525-1750` (string, required)
    + score_value: 10 (string, nullable)
    + goal_id: `2825-21000000001525-1750` (string, nullable)
    + evaluator_type: MANAGER (string, nullable)
    + comment: This is the comment for a goal evaluation (string, optional)
    + answer (CategoryType, required)
    + type: MAIN_EVALUATION (string, nullable)
    + appraisal: 1000954 (string, nullable)
    + _links
        + self
            + href: `http://local-133.umantis.lan/rest/positions/59/goals/3742-21000000001417-585/evaluations/MAIN-2-3742-21000000001417-585` (string, required)
        + goal
            + href: `http://local-133.umantis.lan/rest/positions/59/goals/3742-21000000001417-585`



### Create Goal Evaluation [POST]

Creation of a Goal Evaluation using a POST request.

+ Request (application/json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

    + Body
    + Attributes (object)
        + appraisal: 63002 (string, optional)
        + comment: Great performance (string, required)


+ Response 201 (application/hal+json;charset=UTF-8)
    + Attributes (Goal Evaluation)


### Get Goal Evaluation [GET /positions/{position_id}/goals/{goal_id}/evaluations/{evaluation_id}]

Gets evaluation with given url id's.

+ Parameters
    + evaluation_id (required, string, `MAIN-2-2825-21000000001525-1750`) ... ID of the goal evaluation in the form of an string

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

    + Body

+ Response 200 (application/hal+json;charset=UTF-8)
    + Attributes (Goal Evaluation)



### Udate Goal Evaluation [PUT /positions/{position_id}/goals/{goal_id}/evaluations/{evaluation_id}]

This PUT request will modify the existing Goal Evaluation with given url parameter ids.

+ Parameters
    + evaluation_id (required, string, `MAIN-2-2825-21000000001525-1750`) ... ID of the goal evaluation in the form of an string

+ Request (application/hal+json)

    + Headers

            Accept-Charset: utf-8
            X-AUTH-TOKEN: {{token}}
            X-FORWARDED-HOST: local-133.umantis.lan

    + Body
    + Attributes (object)
        + appraisal: 63002 (string, optional)
        + comment: Great performance (string, required)

+ Response 200 (application/hal+json;charset=UTF-8)
    + Attributes (object)
        + appraisal: 63002 (string, optional)
        + comment: Great performance (string, required)




# Data Structures

## Overall Evaluation Action
+ action: AGREE_GOALS (string, required)

## PeriodEvaluationType
+ status: Status of the evaluation for the position for a given period
+ period_id: 1 (number, required)
+ position_id: 1 (number, required)
+ _embedded
    + overall_evaluations (array[OverallEvaluationType])

## OverallEvaluationType
+ id: 1 (string, required)
+ score_value: 0.8 (number, required)
+ comment: overall evaluation Comment (string, required)
+ answer: customer defined dynamic list value (string, required)
+ evaluator_type (EvaluatorType, nullable)

## GoalEvaluationType
+ id: 1 (string, required)
+ score_value: 0.8 (number, required)
+ comment: evaluation comment (string)
+ evaluation_type (enum)
    + OBJECTIVE
    + TASK
    + SKILL
    + DEVELOPMENT
    + BEHAVIOR
    + FEEDBACK
    + COMPANY_GOAL
    + DEPARTMENT_GOAL
+ answer: customer defined dynamic list value (string, required)
+ _links
    + goal
        + href: /goals/1

## MainGoalEvaluationType
+ evaluator_type (EvaluatorType, nullable)
+ _embedded
    + goalEvaluation (GoalEvaluationType)

## EvaluatorType (enum)
    + MANAGER
    + EMPLOYEE

## AppraisalType
+ evaluator_email
I actually have doubts about the Evaluator shall it be a link?
Problems: if external person, the email is enough
but if employee, who's details are not accessible to the current user then a link won't work...
+ creation_date: `2015-05-05T12:30:00` (optional, string)
+ modification_date: `2015-05-05T12:30:00` (optional, string)
+ _embedded
    + goalEvaluation (GoalEvaluationType)
+ _links
    + evaluator
        + href: /persons/1

## AppraisalValueType
+ value: 1000954 (string, required)
+ list: 68 (string, required)

## Page
+ offset: 0 (number, required)        
+ limit: 10 (number, required)
+ total_count: 0 (number, required)

## PaginationLinks
+ first (required)
    + href: `http://local-133.umantis.lan/rest/some_prefix/some_endpoint?limit=10&offset=0` (string, required)
+ prev (required)
    + href: `http://local-133.umantis.lan/rest/some_prefix/some_endpoint?limit=10&offset=0` (string, required)
+ last (required)
    + href: `http://local-133.umantis.lan/rest/some_prefix/some_endpoint?limit=10&offset=0` (string, required)
+ self (required)
    + href: `http://local-133.umantis.lan/rest/some_prefix/some_endpoint` (string, required)

## CategoryType
+ value: 21005 (string, nullable)
+ list: 1010 (string, nullable)


## InvitationType
+ status (required, enum)
    + INVITED
    + STARTED
+ creation_date: `2015-05-05T12:30:00` (optional, string)
+ modification_date: `2015-05-05T12:30:00` (optional, string)
+ evaluated: `true` (required, boolean)
+ evaluator_id: 834 (optional, number)
+ goal_id: `878-21000000000165-316` (required, string)
+ evaluator_email: `rade.kolbas@umantis.com` (optional, string)
+ _links
    + goal_recipient
        + href: /positions/41/public_info
    + goal
        + href: /positions/41/periods/101/goals/878-21000000000165-316
    + peer_evaluation
        + href: /positions/41/goals/878-21000000000165-316/evaluations/TPA-5-878-21000000000165-316