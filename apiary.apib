FORMAT: 1A

# Core MM API

Core MM is an API allowing consumers to access employee app features.


## Employees [/employees]

### Employee [/employees/{employee_id}]

+ id (integer) - Id of the employee
+ name (string) - Name of the employee
+ surname (string) - Surname of the employee
+ title (string) - Title of the employee
+ photography (string) - Photography of the employee in the form of a URL

+ Model (application/hal+json)

+ Parameters
    + employee_id (required, number, `1`) ... ID of the employee in the form of an integer
+ Attributes (object)
    + id: 1 (number, required)
    + name: John (number, required)
    + surname: Doe (string, required)
    + title: Senior Software Engineer. (string)
    + photography: /images/1 (string)
    + _links
        + self: /employees/1 (string)
    + _embedded
        + positions (array[Position])

### GET Employee [GET]

A single Employee is returned through a GET request where the employee id is sent as an URL parameter.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)

    + Headers
    
    + Body
    + Attributes (Employee)



## Positions [/positions]

Every employee has at least a position.
A position identifes an occupancy into the company.


### Position [/positions/{position_id}]

Gets a position given it's id.

+ id (integer) - Id of the position
+ name (string) - Name of the position
+ description (string) - DEscription of the position

+ Model (application/hal+json)

+ Parameters
    + position_id (required, number, `1`) ... ID of the position in the form of an integer
+ Attributes (object)
    + id: 1 (number, required)
    + name: Java developer (string, required)
    + description: Developer of the Core MM API (string)
    + _links
        + self: /position/1 (string)
        + employee: /employees/1 (string)



### GET Position [GET]

A single Position is returned through a GET request where the position id is sent as an URL parameter.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)

    + Headers
    
    + Body
    + Attributes (Position)



### GET Position Direct Reports [GET /positions/{position_id}/direct_reports]

Returns list of position who direct reports given position id.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)

    + Headers
    
    + Body  
    + Attributes (object)
        + direct_reports (array[Position])
        + page (Page)
        + _links
            + self: /positions/1/direct_reports (string)
            + next: /positions/1/direct_reports?page=2&limit=10 (string)



    

## Goal [/goals/{goal_id}]

+ period (integer) - Id of the period
+ type (integer) - Id of type of goal
+ title (string) - Title of the goal
+ description (string) - Description of the goal
+ creator (string) - Position id of the Goal creator
+ recipient (integer) - Position id of he Goal recipient
+ category (string) - Category of the created Goal

+ Model (application/hal+json)

+ Parameters
    + goal_id (required, number, `1`) ... ID of the goal in the form of an integer
+ Attributes (object)
    + period: 103 (number, required)
    + type: 2 (number, required)
    + title: Title for demo (string, required)
    + description: It seems that we can create goals. (string)
    + creator: 76 (string, required)
    + recipient: 81 (number, required)
    + category: 1020001 (string)



### Modify a goal [PUT]

A  goal will be modified using this action.
This action takes a JSON payload as a part of the request.
Response then return specific header and body

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
    + Body
    + Attributes (Goal)

+ Response 200 (application/hal+json)

    + Headers
    
    + Body
    + Attributes (Goal)
    


### Get a goal [GET]

A single Goal is returned through a GET request where the goal id is sent as an URL parameter.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)

    + Headers
    
    + Body
    + Attributes (Hal Goal)


### Delete a goal [DELETE /goals/{goal_id}?{period}&{recipient}&{type}]

This DELETE request will delete the goal with the existing request parameter id.

+ Request (application/json)
            
    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Parameters
        + period: 1 (required, number)
        + recipient: 1 (required, number)
        + type: 1 (required, number)
   
+ Response 204





### Create a new goal [POST /goals]

A new goal will be created using this action.
This action takes a JSON payload as a part of the request.
Response then return specific header and body

+ period (integer) - Id of the period
+ type (integer) - Id of type of goal
+ title (string) - Title of the goal
+ description (string) - Description of the goal
+ creator (string) - Position id of the Goal creator
+ recipient (integer) - Position id of he Goal recipient
+ category (string) - Category of the created Goal

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Body
    + Attributes (Goal)

+ Response 201 (application/hal+json)
    + Attributes (Goal)


### Get all goals [GET /position/{position_id}/goals]

All Goals from given position are returned through a GET request where the position id is sent as an URL parameter.

+ Parameters
    + position_id (required, number, `1`) ... ID of the position of the owner of the goals in the form of an integer
    
+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)

    + Headers
    
    + Body
    + Attributes (array[Hal Goal])



## Goal Type [/goals/types/{type_id}]

Every goal has a related goal type.

+ type_id (number) - Id of type of goal
    + objective = 1
    + task = 2
    + skill = 3
    + development = 4
    + behavior = 5
    + feedback = 6
    + potential = 7

+ Model (application/hal+json)

+ Parameters
    + type_id: 1 (required, number) ... ID of the goal type in the form of an integer

+ Attributes (object)
    + type: 1 (number, required)
    + name: competence (string, required)
    + appraisals (Goal Type Appraisals)
    + cagegories (Goal Type Categories)    
    + _links
        + self: /goals/types/1 (string)



### Get Goal Type [GET] 

Gets Goal Type with given url parameter id.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body 
    + Attributes (Goal Type)
<!--    + Attributes
        + _embedded (array[Goal Type Appraisals]) -->




### List Goal Types [GET /goals/types?{position}&{period}]

List a list of goal types appliable to a goal.
If position or/and period parameters are sent, returned goal type are only appliable for that period and position.

+ Parameters
    + position (optional, number, `1`) ... Id of the position applicable to the returned goal types.
    + period (optional, number, `1`) ... Id of the period applicable to the returned goal types
    
+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body  
    + Attributes (object)
        + types (array[Goal Type])
        + page (Page)
    + Attributes
        + _links
            + self: /goals/types?position=1&period=1 (string)
            + next: /goals/types?position=1&period=1?page=1 (string)




## Goal Type Appraisals [/goals/types/{type_id}/appraisals]

Every goal type has a scale of appraisal values.

+ Model (application/hal+json)

+ Parameters
    + type_id (required, number, `1`) ... ID of the goal type
    
+ Attributes (object)
    + appraisals (array[Appraisal])
    + _links
        + self: /goals/types/1/appraisals (string)

### Get Goal Type Appraisals [GET]

List all appraisals for a given goal type.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body  
    + Attributes (Goal Type Appraisals)
        + _links
            + self: /goals/types/1/appraisals (string)


### Goal Type Categories [/goals/types/{type_id}/categories]

Every goal type has a scale of possible categories values.

+ Model (application/hal+json)

+ Parameters
    + type_id (required, number, `1`) ... ID of the goal type
    
+ Attributes (object)
    + categories (array)
        + (object)
            + id: 1 (number, required)
            + value: 21005 (string, required)
    + _links
        + self: /goals/types/1/categories (string)


### Get Goal Type Categories [GET]

List all categories for a given goal type.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body  
    + Attributes (Goal Type Categories)




## Goal Evaluation [/positions/{position_id}/goals/{goal_id}/evaluations]

+ evaluator: Position Id of the creator of the Evalution (string, required)
+ period: 103 (string, required)
+ goalType: 2 (string, required)
+ appraisal: Id of the appraisal value (string)  
+ comment: This is the comment for a goal evaluation (string)

+ Model (application/hal+json)

+ Parameters
    + position_id (required, number, `1`) ... ID of the position who owns the goal that receives the evaluation
    + goal_id (required, number, `1`) ... ID of the goal in the form of an integer
    
+ Attributes (object)
    + evaluator: Position Id of the evaluator of the Evalution (string, required)
    + period: 103 (string, required)
    + goalType: 2 (string, required)
    + appraisal: Id of the appraisal value (string)  
    + comment: This is the comment for a goal evaluation (string)


### Create Goal Evaluation [POST]

Creation of a Goal Evaluation using a POST request.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Body
    + Attributes (Goal Evaluation)

+ Response 201 (application/hal+json)
    + Attributes
        + id: 1 (number, required)
    + Attributes (Goal Evaluation)
    + Attributes
        + _links
            + self: /positions/1/goals/1/evaluations/1 (string)
            + update: /positions/1/goals/1/evaluations/1 (string
            + delete: /positions/1/goals/1/evaluations/1 (string)



### Get Goal Evaluation [GET /positions/{position_id}/goals/{goal_id}/evaluations/{evaluation_id}]

Gets evaluation with given url id's.

+ Parameters
    + position_id (required, number, `1`) ... ID of the position who owns the goal that receives the evaluation
    + goal_id (required, number, `1`) ... ID of the goal in the form of an integer
    + evaluation_id (required, number, `1`) ... ID of the goal evaluation in the form of an integer
    
+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Body

+ Response 200 (application/hal+json)
    + Attributes
        + id: 1 (number, required)
    + Attributes (Goal Evaluation)
    + Attributes
        + _links
            + self: /positions/1/goals/1/evaluations/1 (string)
            + update: /positions/1/goals/1/evaluations/1 (string
            + delete: /positions/1/goals/1/evaluations/1 (string)



### Udate Goal Evaluation [PUT /positions/{position_id}/goals/{goal_id}/evaluations/{evaluation_id}]

This PUT request will modify the existing Goal Evaluation with given url parameter ids.

+ Parameters
    + position_id (required, number, `1`) ... ID of the position who owns the goal that receives the evaluation
    + goal_id (required, number, `1`) ... ID of the goal in the form of an integer
    + evaluation_id (required, number, `1`) ... ID of the goal evaluation in the form of an integer
    
+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Body

+ Response 200 (application/hal+json)
    + Attributes
        + id: 1 (number, required)
    + Attributes (Goal Evaluation)
    + Attributes
        + _links
            + self: /positions/1/goals/1/evaluations/1 (string)
            + update: /positions/1/goals/1/evaluations/1 (string
            + delete: /positions/1/goals/1/evaluations/1 (string)


### Delete a Goal Evaluation [DELETE /positions/{position_id}/goals/{goal_id}/evaluations/{evaluation_id}]

This DELETE request will delete the Goal Evaluation with the existing request id parameters.

+ Parameters
    + position_id (required, number, `1`) ... ID of the position who owns the goal that receives the evaluation
    + goal_id (required, number, `1`) ... ID of the goal in the form of an integer
    + evaluation_id (required, number, `1`) ... ID of the goal evaluation in the form of an integer

+ Request (application/json)
            
    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
   
+ Response 204





## Periods Collection [/periods]

Periods define timeline stages in any corporative element.

### Period [/periods/{id}]

+ Parameters
    + id (required, number, `1`) ... ID of the period in the form of an integer

+ Model (application/hal+json)

+ Attributes (object)
    + id: 12 (number, required)
    + name: Q3-2015 (string, required)


### Get period [GET]

Gets period identified by url id parameter.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body  
    + Attributes (Period)
    + Attributes
        + _links
            + self: /periods/1 (string)
            + next: /periods/2 (string, required)



### Get current period [GET /periods/current]

Gets the period that is currently applied.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body  
    + Attributes (Period)
    + Attributes
        + _links
            + self: /periods/1 (string)
            + next: /periods/2 (string, required)



## Overall Evaluation [/positions/{position_id}/periods/{period_id}/evaluations]

+ evaluator: Position Id of the creator of the Evalution (string, required)
+ appraisal: Id of the appraisal value (string)  
+ comment: This is the comment for a overall evaluation (string)
+ status: Status of the Overall Evaluation (Overall Evaluation Status)

+ Model (application/hal+json)

+ Parameters
    + position_id (required, number, `1`) ... ID of the position who owns the goal that receives the evaluation
    + period_id (required, number, `1`) ... ID of the period in the form of an integer
    
+ Attributes (object)
    + evaluator: Position Id of the evaluator of the Evalution (string, required)
    + appraisal: Id of the appraisal value (string)  
    + comment: This is the comment for a period evaluation (string)
    + status (Overall Evaluation Status)




### Get Overall Evaluation [GET]

Gets overall evaluation with given url id's.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Body

+ Response 200 (application/hal+json)
    + Attributes (Hal Overall Evaluation)
    + Attributes
        + _links
            + self: /positions/1/periods/1/evaluations (string)
            + update: /positions/1/periods/1/evaluations (string)
            + delete: /positions/1/periods/1/evaluations (string)




### Create Overall Evaluation [POST]

Creation of a Overall Evaluation using a POST request.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            Location: /positions/1/goals/1/evaluations/1
    
    + Body
    + Attributes (Overall Evaluation)

+ Response 201 (application/hal+json)
    + Attributes (Overall Evaluation)
    + Attributes
        + _links
            + self: /positions/1/goals/1/evaluations/1 (string)
            + update: /positions/1/goals/1/evaluations/1 (string)



### Update Overall Evaluation [PUT]

This PUT request will modify the existing Overall Evaluation with given url parameter ids.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Body

+ Response 200 (application/hal+json)
    + Attributes (Overall Evaluation)
    + Attributes
        + _links
            + self: /positions/1/goals/1/evaluations/1 (string)
            + update: /positions/1/goals/1/evaluations/1 (string)




### Get Overall Evaluation Appraisals [GET /periods/appraisals]

Every overall evaluation has a scale of appraisal values.
List all appraisals for a given goal type.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body  
    + Attributes
        + appraisals (array[Appraisal])
        + _links
            + self: /periods/appraisals (string)



### Get Overall Evaluation Status [GET /periods/{period_id}/status]

Every overall evaluation has a status.
Possible states are:
+ Evaluate: Default status for an Overall Evaluation
+ Aproved: Aproved status, the overall period is ready to be confirmed.
+ Confirmed: Confirmed status, no changes should be allowd in the evaluation.
List the status for a given period.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
            
+ Response 200 (application/hal+json)
    + Body  
    + Attributes
        + status (Overall Evaluation Status)
        + _links
            + self: /periods/1/status (string)
            + update: /periods/1/status (string)



### Udate Overall Evaluation Status [PUT /periods/{period_id}/status]

This PUT request will modify the existing Overall Evaluation Status with given url parameter ids.

+ Request (application/json)

    + Headers
    
            Accept-Charset: application/json
            X-AUTH-TOKEN: DEBUGTOKEN
            X-FORWARDED-HOST: local-133.umantis.lan
    
    + Body

+ Response 200 (application/hal+json)
    + Attributes (Overall Evaluation Status)
    + Attributes
        + _links
            + self: /periods/1/status (string)
            + update: /periods/1/status (string)



# Data Structures

## Hal Goal
+ title: Title (string, required)        
+ description: Description (string, required)
+ _embedded
    + creator (Position)
    + recipient (Position)    
    + goal_type (Goal Type)
    + period (Period)
+ page (Page)

## Hal Overall Evaluation
+ comment: Overall Evaluation Comment (string, required)
+ value (Appraisal, required)
+ _embedded
    + evaluator (Position)
    + appraisal (Appraisal)

## Overall Evaluation Status
+ status (enum)
    + Evaluate
    + Aproved
    + Confirmed

## Page
+ page: 0 (number, required)        
+ limit: 10 (number, required)
+ total_elements: 100 (number, required)
+ total_pages: 10 (number, required)

## Appraisal
+ id: 1 (string, required)
+ value: AGood (string, required)
+ weight: 2 (number, required)

## Category
+ id: 1 (number, required)
+ value: 21005 (string, required)