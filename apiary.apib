FORMAT: 1A
HOST: http://mockserver/

# Core MM API

Core MM is an API allowing consumers to access MM features.

## Employees Collection [/employees]

### List All Employees [GET]

A list of employees will be returned using this action.

+ Response 200 (application/json)

        [
            {
                "id": 1075,
                "type": "PersonType_Person",
                "salutation": "Salutation_F",
                "title": null,
                "name": "Jana",
                "middlename": null,
                "surname": "Becker",
                "displayName": "Jana Becker",
                "titleAfterName": null,
                "photoName": "JanaBecker.jpg",
                "birthDate": null,
                "signature": null,
                "login": "jana.becker",
                "languageId": "77010",
                "language": "de-CH",
                "nationality": null,
                "civilStatus": null,
                "privateContactInfo": null,
                "businessContactInfo": {
                  "email": "jana.becker@fanergy.net",
                  "phoneDirect": "+49 288 58 88 117",
                  "phoneMain": null,
                  "phoneMobile": null,
                  "fax": null,
                  "country": "22084",
                  "zip": "10117",
                  "city": "Berlin",
                  "street": "Unter den Linden 2"
                }
            }
        ]
        
## Positions Collection [/positions]

### List All Positions [GET]

A list of positions will be returned using this action.

+ Response 200 (application/json)

        [
            {
                "id": 86,
                "generalInformation": {
                  "jobNo": null,
                  "jobTitle": "Feedback Endjahresgespr√§ch",
                  "created": {
                    "person": null,
                    "date": 1238671476000
                  },
                  "modified": {
                    "person": null,
                    "date": 1334774919000
                  },
                  "status": null,
                  "isArchived": true,
                  "archivedOn": null
                },
                "jobDescription": {
                  "entryLevel": [],
                  "expectedStartDate": null,
                  "department": null,
                  "employment": null,
                  "salary": null,
                  "salaryComment": null,
                  "jobLocation": null,
                  "jobLocationComment": null,
                  "additionalInformation": null
                },
                "jobRequirements": null,
                "type": "SurveyType_WorkSkills",
                "branchId": null,
                "placeOfWork": null,
                "numberOfVisitors": null,
                "active": false,
                "currentStatus": null,
                "lineManagerId": null
             }
        ]
        
## Roles Collection [/roles]

### List All Roles [GET]

A list of roles will be returned using this action.

+ Response 200 (application/json)

        [
          {
            "id": 18,
            "created": 1217409000000,
            "createdBy": 1,
            "modified": null,
            "type": null,
            "employeeId": 305,
            "applicantDisplayName": null,
            "applicantPhotoName": null,
            "positionId": 28,
            "isArchived": true,
            "archivedOn": null
          }
        ]
        
        
## Goals Collection [/goals]

### Create a new goal [POST]

A new goal will be created using this action.
This action takes a JSON payload as a part of the request.
Response then return specific header and body

+ period (integer) - Id of the period
+ type (integer) - Id of type of goal
+ title (string) - Title of the goal
+ description (string) - Description of the goal
+ creator (integer) - Position id of the Goal creator
+ recipient (integer) - Position id of he Goal recipient

+ Request (application/json)

        {
                "period": 1,
                "type": 2,
                "title": "Performance goal",
                "description": "Operations must be faster.",
                "creator": 76,
                "recipient": 83
        }

+ Response 201 (application/json)

    + Headers
            
            Location: /goals/5
    
    + Body
    
            {
                "id": 76,
                "period": 1,
                "type": 2,
                "title": "Performance goal",
                "description": "Operations must be faster.",
                "creator": 76,
                "recipient": 83
            }
            
## Goal [/goals/{goal_id}]

+ Parameters
    + goal_id (required, int) - ID of the goal in the form of an integer

### Modify a goal [PUT]

A  goal will be modified using this action.
This action takes a JSON payload as a part of the request.
Response then return specific header and body

+ period (integer) - Id of the period
+ type (integer) - Id of type of goal
+ title (string) - Title of the goal
+ description (string) - Description of the goal
+ creator (integer) - Position id of the Goal creator
+ recipient (integer) - Position id of he Goal recipient

+ Request (application/json)

        {
            "period": 1,
            "type": 2,
            "title": "Performance goal",
            "description": "Operations must be faster.",
            "creator": 76,
            "recipient": 83
        }

+ Response 200 (application/json)

    + Headers
    
    + Body
    
            {
                "period": 1,
                "type": 2,
                "title": "Performance goal",
                "description": "Operations must be faster.",
                "creator": 76,
                "recipient": 83,
                "_links": {
                    "self": {
                        "href": "/goals/5"
                    },
                    "evaluations": {
                        "href": "/goals/5/evaluations"
                    },
                    "creator": {
                        "href": "/positions/76"
                    },
                    "recipient": {
                        "href": "/positions/83"
                    }
                }
            }
    

### Get a goal [GET]

A single Goal is returned through a GET request where the goal id is sent as an URL parameter.

+ Response 200 (application/json)

    + Headers
    
    + Body
    
            {
                "period": 1,
                "type": 2,
                "title": "Performance goal",
                "description": "Operations must be faster.",
                "creator": 76,
                "recipient": 83,
                "_links": {
                    "self": {
                        "href": "/goals/5"
                    },
                    "evaluations": {
                        "href": "/goals/5/evaluations"
                    },
                    "creator": {
                        "href": "/positions/76"
                    },
                    "recipient": {
                        "href": "/positions/83"
                    }
                }
            }

### Deleted a goal [DELETE]

This DELETE request will delete the goal with the existing request parameter id.

+ Response 204